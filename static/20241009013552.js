const animatePage = () => {\n    document.querySelectorAll('.header-container, .nav-container, .unplayed_songs, .current-song-info').forEach(element => {\n        element.style.transition = 'transform 0.5s';\n        element.addEventListener('mouseenter', () => {\n            element.style.transform = 'translateY(-10px)';\n        });\n        element.addEventListener('mouseleave', () => {\n            element.style.transform = 'translateY(0)';\n        });\n    });\n\n    // Use Three.js to create a 3D animation background\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth/window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer({ canvas: document.querySelector("body") });\n\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    \n    const geometry = new THREE.TorusKnotGeometry(10, 3, 100, 16);\n    const material = new THREE.MeshBasicMaterial({ color: 0x00ff00, wireframe: true });\n    const knot = new THREE.Mesh(geometry, material);\n    scene.add(knot);\n\n    camera.position.z = 50;\n\n    const animate = function () {\n        requestAnimationFrame(animate);\n\n        knot.rotation.x += 0.01;\n        knot.rotation.y += 0.01;\n\n        renderer.render(scene, camera);\n    };\n    animate();\n\n    // Apply a Phaser.js powered animation for button hover effects\n    document.querySelectorAll('.nav-link').forEach(button => {\n        const phaserConfig = {\n            type: Phaser.AUTO,\n            width: 800,\n            height: 600,\n            scene: {\n                preload: function() {\n                    this.load.image('button', '/path/to/button_sprite.png');\n                },\n                create: function() {\n                    this.buttonSprite = this.add.sprite(button.offsetLeft, button.offsetTop, 'button').setInteractive();\n                    this.input.on('gameobjectover', (pointer, gameObject) => {\n                        gameObject.setScale(1.1);\n                    });\n                    this.input.on('gameobjectout', (pointer, gameObject) => {\n                        gameObject.setScale(1);\n                    });\n                }\n            }\n        };\n        new Phaser.Game(phaserConfig);\n    });\n};\n\nwindow.onload = animatePage;